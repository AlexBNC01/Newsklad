/**
 * –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Timeweb Cloud Apps
 * –°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
 */

exports.seed = async function(knex) {
  console.log('üå± –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
    const existingCompanies = await knex('companies').select('*').limit(1);
    
    if (existingCompanies.length > 0) {
      console.log('üìä –î–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º seed');
      return;
    }
    
    console.log('üè¢ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–∫–æ–º–ø–∞–Ω–∏–∏...');
    
    // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–∫–æ–º–ø–∞–Ω–∏—é
    const [demoCompany] = await knex('companies').insert({
      name: '–î–µ–º–æ –ö–æ–º–ø–∞–Ω–∏—è',
      settings: JSON.stringify({
        currency: 'RUB',
        timezone: 'Europe/Moscow',
        inventory_alerts: true,
        maintenance_alerts: true,
      }),
      subscription: JSON.stringify({
        plan: 'free',
        users_limit: null,
        storage_limit_gb: null,
        expires_at: null,
      }),
      created_at: knex.fn.now(),
      updated_at: knex.fn.now()
    }).returning('*');
    
    console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–∞–¥–º–∏–Ω–∞ (–ø–∞—Ä–æ–ª—å: demo123)
    const bcrypt = require('bcryptjs');
    const hashedPassword = await bcrypt.hash('demo123', 12);
    
    const [demoUser] = await knex('users').insert({
      email: 'demo@skladreact.ru',
      password_hash: hashedPassword,
      full_name: '–î–µ–º–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      company_id: demoCompany.id,
      role: 'admin',
      permissions: JSON.stringify({
        can_manage_users: true,
        can_manage_equipment: true,
        can_manage_inventory: true,
        can_view_reports: true,
        can_export_data: true,
      }),
      is_active: true,
      email_verified: true,
      created_at: knex.fn.now(),
      updated_at: knex.fn.now()
    }).returning('*');
    
    console.log('üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...');
    
    // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    await knex('containers').insert([
      {
        name: '–°–∫–ª–∞–¥ –ê1',
        location: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥',
        description: '–û—Å–Ω–æ–≤–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–ø—á–∞—Å—Ç–µ–π',
        company_id: demoCompany.id,
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        name: '–°–∫–ª–∞–¥ –ë1',
        location: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–∫–ª–∞–¥',
        description: '–ó–∞–ø—á–∞—Å—Ç–∏ –¥–ª—è —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∏',
        company_id: demoCompany.id,
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        name: '–ú–æ–±–∏–ª—å–Ω—ã–π —Å–∫–ª–∞–¥',
        location: '–°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å',
        description: '–ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏',
        company_id: demoCompany.id,
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      }
    ]);
    
    console.log('üë• –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–ø–µ—Ä—Å–æ–Ω–∞–ª–∞...');
    
    // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–ø–µ—Ä—Å–æ–Ω–∞–ª
    await knex('staff').insert([
      {
        name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
        position: '–°–ª–µ—Å–∞—Ä—å',
        hourly_rate: 500,
        phone: '+7 (999) 123-45-67',
        company_id: demoCompany.id,
        is_active: true,
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        name: '–°–µ—Ä–≥–µ–π –°–∏–¥–æ—Ä–æ–≤',
        position: '–ú–µ—Ö–∞–Ω–∏–∫',
        hourly_rate: 600,
        phone: '+7 (999) 234-56-78',
        company_id: demoCompany.id,
        is_active: true,
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      }
    ]);
    
    console.log('üöú –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-—Ç–µ—Ö–Ω–∏–∫–∏...');
    
    // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-—Ç–µ—Ö–Ω–∏–∫—É
    await knex('equipment').insert([
      {
        type: '–¢—Ä–∞–∫—Ç–æ—Ä',
        model: '–ú–¢–ó-82',
        serial_number: '–ú–¢–ó123456',
        license_plate: 'A123BC77',
        year: 2018,
        status: '–ò—Å–ø—Ä–∞–≤–µ–Ω',
        engine_hours: 1250,
        mileage: 45000,
        company_id: demoCompany.id,
        photos: JSON.stringify([]),
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        type: '–ö–∞–º–ê–ó',
        model: '–ö–∞–º–ê–ó-5320',
        serial_number: '–ö–ê–ú789012',
        license_plate: '–í456–ï–ö99',
        year: 2020,
        status: '–ò—Å–ø—Ä–∞–≤–µ–Ω',
        engine_hours: 950,
        mileage: 78000,
        company_id: demoCompany.id,
        photos: JSON.stringify([]),
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      }
    ]);
    
    console.log('‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('üîë –î–µ–º–æ-–¥–æ—Å—Ç—É–ø:');
    console.log('   Email: demo@skladreact.ru');
    console.log('   –ü–∞—Ä–æ–ª—å: demo123');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
    throw error;
  }
};